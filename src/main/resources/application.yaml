spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

---

logging:
  level:
    io.opentelemetry: DEBUG
    org.springframework.boot.env: DEBUG
    org.springframework.context: DEBUG

spring:
  data:
    mongodb:
      ssl-enabled: true

---
spring:
  config:
    activate:
      on-profile: local
  data:
    mongodb:
      uri: mongodb://admin:password@localhost:27017/mydb
#      host: localhost
#      port: 27017
#      database: mydb
#      username: admin
#      password: password
#      authentication-database: admin


# see https://opentelemetry.io/docs/languages/java/configuration/
otel:
  traces:
    exporter: otlp
  logs:
    exporter: none
  metrics:
    exporter: none
#      OTEL_SERVICE_NAME: 'graal-native-example-app'
  exporter:
    otlp:
      protocol: http/protobuf
      endpoint: http://jaeger-collector:443/v1/traces
#      protocol: http
#      host: jaeger-303ada4c-4478-49dd-b427-8c482bfc17b8
#      port: 443
#      headers:
#        Authorization: Bearer your-token    

---
spring:
  config:
    activate:
      on-profile: cloud
  data:
    mongodb:
     #uri: ${vcap.services.mongodb-service.credentials.uri}
     #cassandra.contact-points=#{ cfEnv.findCredentialsByTag('cassandra').get('node_ips') }     
      uri: #{ cfEnv.findCredentialsByTag('mongodb').get('uri')
  ssl:
    bundle:
      pem:
        mongodb-ssl-bundle:
          reload-on-update: false
          truststore:
            certificate: #{ cfEnv.findCredentialsByTag('mongodb').get('tlsCert') }
            private-key: #{ cfEnv.findCredentialsByTag('mongodb').get('tlsKey') }
            

#certificate: ${VCAP_SERVICES[mongodb-service][0].credentials.tlsCert}
#private-key: ${VCAP_SERVICES[mongodb-service][0].credentials.tlsKey}

# In application.properties format:
# spring.ssl.bundle.pem.clientbundle.truststore.certificate=${VCAP_SERVICES[your-service-name][0].credentials.certificate}
# spring.ssl.bundle.pem.clientbundle.truststore.private-key=${VCAP_SERVICES[your-service-name][0].credentials.private_key}      
      
otel:
  traces:
    exporter: otlp
  logs:
    exporter: none
  metrics:
    exporter: none
  exporter:
    otlp:
      endpoint: ${vcap.services.observability-service.credentials.jaegerCollectorHost}
---
spring:
  config:
    activate:
      on-profile: k8s
otel:
  traces:
    exporter: otlp
  logs:
    exporter: none
  metrics:
    exporter: none

      